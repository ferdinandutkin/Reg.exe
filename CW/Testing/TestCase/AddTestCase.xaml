<rxui:ReactiveUserControl x:Class="CW.Views.AddTestCase"
                          x:TypeArguments="viewmodels:AddTestCaseViewModel"
             xmlns:rxui="http://reactiveui.net"
                          AllowDrop="True"
                          
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                            xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CW.Views"
		  xmlns:behaviours="clr-namespace:CW.Views.Behaviours" xmlns:viewmodels="clr-namespace:CW.ViewModels"
        mc:Ignorable="d"
       >
    <Grid DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:AddTestCase}}, Path=ViewModel}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        
        <StackPanel Grid.Row="0" Grid.Column="0">
            <TextBlock Text="Текст" 
                       Foreground="{StaticResource OffWhiteBrush}"
                       HorizontalAlignment="Center"
                       Margin="0 10 0 0"/>
            <TextBox x:Name="TextInput"
                     Style="{StaticResource ForTesting}"
                     Margin="10"/>
        </StackPanel>

        <StackPanel Grid.Row="1" Grid.Column="0">
            <TextBlock Text="Введите позиции вручную"
                       Foreground="{StaticResource OffWhiteBrush}"
                       HorizontalAlignment="Center"
                       Margin="0 10 0 0"/>
            <Button x:Name="AddToSelected" 
                    Content="Добавить выделенное" 
                    Click="AddToSelected_Click"
                    Style="{StaticResource BaseButton}"
                    FontSize="14"
                    HorizontalAlignment="Center"/>
        </StackPanel>

        <StackPanel Grid.Row="2" Grid.Column="0">
            <TextBlock Text="Или задайте эквивалентным выражением:"
                       Foreground="{StaticResource OffWhiteBrush}"
                       HorizontalAlignment="Center"
                       Margin="0 10 0 0"/>
            <TextBox x:Name="RegexInput"
                     Style="{StaticResource ForTesting}"
                     Margin="10 10 10 5"/>
            <Button x:Name="ApplyRegex" 
                    Content="Применить выражение"
                    Style="{StaticResource BaseButton}"
                    FontSize="14"
                    HorizontalAlignment="Center"/>
        </StackPanel>



        <StackPanel Grid.Row="0" Grid.RowSpan="2" 
                    Grid.Column="1">
            <TextBlock Text="Результат:"
                       Foreground="{StaticResource OffWhiteBrush}"
                       HorizontalAlignment="Center"
                       Margin="0 10 0 0"/>
            <TextBlock x:Name="ResultOutput"
                          Style="{StaticResource TextBlockStyle}"
						 behaviours:PositionsBehaviuor.Text="{Binding Model.Text, Mode=Default, UpdateSourceTrigger=PropertyChanged}" 
				   behaviours:PositionsBehaviuor.SelectedPositions="{Binding Model.Positions}"
						 behaviours:PositionsBehaviuor.HighlightedPosition="{Binding SelectedPosition}"
				   behaviours:PositionsBehaviuor.HighlightedPositionBrush="{StaticResource SlateBrush}"
				   behaviours:PositionsBehaviuor.SelectedPositionsBrush="{StaticResource SlatePressedBrush}"
 
						 />



            <DataGrid  ColumnHeaderStyle="{StaticResource DataGridColumnHeaderStyle}" IsReadOnly="False" RowStyle="{StaticResource DataGridRowStyle}" Style="{StaticResource DataGrid}" RowHeight="NaN" CanUserSortColumns="False" CanUserResizeRows="False" x:Name="Positions"  ItemsSource="{Binding Model.Positions}">
                <DataGrid.Columns>
                    <DataGridTemplateColumn  Width="*" Header="From" >
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Start}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <xctk:IntegerUpDown  ClipValueToMinMax="True" Minimum="0" Maximum="{Binding End}" Value="{Binding Start}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn  Width="*" Header="To" >
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding End}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <xctk:IntegerUpDown ClipValueToMinMax="True"  Minimum="{Binding Start}" Value="{Binding End}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>

                </DataGrid.Columns>
            </DataGrid>
        </StackPanel>




    </Grid>
</rxui:ReactiveUserControl>
